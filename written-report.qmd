---
title: "Airbnbs in New York City"
author: "Team lol: Tamsin Connerly, Hannah Lee, Jasmine Jiang"
date: "3/17/25"
format: pdf
execute: 
  warning: false
  message: false
  echo: false
editor: visual
bibliography: references.bib
---

```{r}
#| label: load packages and data

library(tidyverse)
library(tidymodels)
library(knitr)
library(patchwork)
library(rms)

airbnb <- read.csv("data/listings.csv")
```

## Introduction

The rise of short-term rental platforms, particularly Airbnb, has significantly disrupted the traditional hospitality industry and transformed urban housing markets worldwide. In New York City, one of the world's most popular tourist destinations, the impact of Airbnb has been particularly pronounced, raising questions about its effects on local communities, housing affordability, and the broader urban economy.

Previous research has identified several factors that impact Airbnb pricing. One study found that host attributes, site and property attributes, amenities and services, rental rules, and online review ratings all play significant roles in determining listing prices [@wang2017]. Furthermore, recent studies have provided evidence of Airbnb's influence on housing markets. Another study found that a 1% increase in Airbnb listings leads to a 0.018% increase in rents and a 0.026% increase in house prices [@barron2018]. This effect is more pronounced in areas with a lower share of owner-occupiers, suggesting that non-owner-occupiers are more likely to reallocate their properties from long-term to short-term rentals.

Our research question is: "How do various factors, such as bedroom number, room type, review scores, and neighborhood, influence the price of Airbnb listings in New York City?"Â 

Price is the total price per night including fees (quantitative). Bedroom number is the total number of bedrooms in the rental (quantitative). Room type is whether the rental is a hotel room, entire home/apartment, private room, or shared room (categorical). Review score is the average review score of the rental from 1-5 stars (quantitative). Neighborhood is the borough of New York City that the rental is located in (categorical).

The Airbnb dataset that we are utilizing can be found on Inside Airbnb (<https://insideairbnb.com/>). Inside Airbnb has randomly collected data on dozens of countries and cities, but we decided to focus on New York City. The data was sourced from publicly available data on the Airbnb website on March 1, 2025.

Understanding the determinants of Airbnb pricing in New York City is crucial for several reasons. Firstly, it can provide valuable insights for policymakers grappling with the challenges posed by the growth of short-term rentals, including potential impacts on housing affordability and neighborhood character [@toader2021]. Secondly, it can help hosts make more informed pricing decisions, potentially leading to more efficient market outcomes.

## Univariate Exploratory Data Analysis

### Response Variable - Price

```{r}
#| label: figure-02
tidy(summary(airbnb$price)) |>
  kable(digits = 3)
```

The distribution is pretty heavily right skewed. There is an outlier at \$20,000 that impacts the mean, since the median of \$140 is quite a bit less than the mean of around \$213.84, and the mean is roughly equal to the 3rd quartile which is also around \$240. The second highest price value is less than \$1,000. We have removed this outlier for our analysis.

```{r}
#| label: figure-03
#| fig-height: 2.75

airbnb <- airbnb |>
  filter(price < 2500)

ggplot(airbnb, aes(x = price)) +
  geom_histogram() +
  labs(title = "Closer Look at Distribution of Price (Removed Outliers)", 
       x = "Listing Price (USD)", 
       y = "Count") 
```

We can see that the distribution is still right skewed, and the vast majority of the listings seem to cost between \$50-\$200. Because of this skewedness, we also plan to apply log transformation to this variable to address the skew of the response variable.

### Predictor Variable - Review Scores

To account for the 6733 NA values for review scores, we will filter the dataset to include only listings with 5 or more reviews, since the median number of reviews for a listing is 5.

```{r}
#| label: data-transformation
#| echo: false

airbnb <- airbnb |>
  filter(number_of_reviews >= 5)
```

```{r}
#| label: figure-07.5
#| fig-height: 2.75
#| echo: false

ggplot(data = airbnb, aes(x = review_scores_rating)) +
  geom_histogram() +
  labs(title = "Distribution of Average Airbnb 
  Review Scores in New York City with at Least 5 Reviews", 
       x = "Average Review Score (out of 5.0)", 
       y = "Count") 
```

The distribution of review scores is skewed left after the transformation, with a median of 4.82 and a mean of 4.765. The minimum review score has increased from 1 to 2.44, and the third quartile review score has decreased from 5 to 4.93.

## Bivariate Exploratory Data Analysis

### Response (Price) vs Predictor Variable (review scores)

```{r}
#| label: figure-13
#| fig-height: 3

ggplot(airbnb, aes(x = review_scores_rating, y = price)) +
  geom_point(alpha = 0.5) +
  labs(title = "Price vs. Review Score",
       x = "Review Score",
       y = "Price (USD)") 

```

This scatter plot shows the relationship between price and review scores. However, it looks a little problematic and hard to interpret because high data density at certain score levels, especially between 4 and 5. Since the price variable is highly skewed, we applied a log transformation to try to help spread out values and make trends more visible.

```{r}
#| label: figure-14
#| fig-height: 3

airbnb <- airbnb |>
  filter(price <= quantile(price, 0.99))

ggplot(airbnb, aes(x = review_scores_rating, y = log(price))) +
  geom_jitter(alpha = 0.3) +  # Adds slight randomness to reduce overlap
  labs(title = "Log-Transformed Price vs. Review Score",
       x = "Review Score",
       y = "Log of Price (USD)") 
```

The majority of listings have review scores between 4 and 5, this shows that most listings have scores within this range. Higher-rated listings tend to have slightly higher prices, but the effect is weak.

### Response (Price) vs Predictor Variable (Neighborhood)

```{r}
#| label: figure-18
#| fig-height: 2.5

airbnb <- airbnb |>
  mutate(neighbourhood_group_cleansed = reorder(neighbourhood_group_cleansed, price, median))

ggplot(airbnb, aes(x = neighbourhood_group_cleansed, y = log(price))) +
  geom_boxplot(outlier.size = 0.5) +
  coord_flip() +  # Flip for readability
  labs(title = "Log-Transformed Price Distribution 
       by Neighborhood",
       x = "Neighborhood",
       y = "Log of Price (USD)") 
```

According to this plot, we can see that Manhattan has the highest median price, showing that it is the most expensive borough for Airbnb listings. It alsoexhibits the widest IQR, suggesting a high variation in listing prices. The median of Brooklyn follows Manhattan, with a slightly lower median price but still a wider spread. There are still some outliers shown in the plot, but the interpretability is much better.

## Interaction Effects

### Bedrooms and Room Type

```{r}
#| label: figure-19
#| fig-height: 2.5
#| warning: FALSE
#| echo: FALSE

airbnb <- airbnb |>
  mutate(log_price = log(price))

airbnb |>
  ggplot(aes(x = bedrooms, y = log(price), color = room_type)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  labs(title = "Log Price vs. Bedrooms by Room Type",
       x = "Number of Bedrooms",
       y = "Log Price (log($))",
       color = "Type of Room") 
```

Based on the graph, it appears that the rate at which price increases per number of bedrooms varies across room types. The slope of the shared room especially seems to differ from the others. Thus, there may be an interaction effect here.

## Methodology

We chose to build a multiple linear regression model, as we wanted to use multiple explanatory variables to predict our continuous response variable: airbnb price.

To build the model, we kept used the log transformed price as the response variable due to our findings from the EDA above. The predictor variables we included in the model were the number of bedrooms, room type, review score ratings, and neighborhood. We decided to wanted to build a model that did not include the interaction between room type and number of bedrooms (this was the most obvious potential interaction effect from our EDA), and then build a second model that included the interaction and see which one performed better before selecting our final model.

### Multiple Linear Regression With No Interaction

```{r}
#| label: model-without-interaction

airbnb_fit <- lm(log_price ~ bedrooms + room_type + review_scores_rating 
                           + neighbourhood_group_cleansed, data = airbnb)

tidy(airbnb_fit) |>
  kable(digits = 3)
```

### Multiple Linear Regression with Interaction Effects

```{r}
#| label: model-interaction

airbnb_fit_interaction <- lm(log_price ~ bedrooms + room_type + review_scores_rating 
                           + neighbourhood_group_cleansed + bedrooms * room_type, data = airbnb)

tidy(airbnb_fit_interaction) |>
  kable(digits = 3)
```

### Evaluating the Models

To evaluate both models' performance, we decided to take a look at their $r^2$ and adjusted $r^2$ values to see which model had higher values.

```{r}
#| label: r2-values

glance(airbnb_fit) |>
  select(r.squared, adj.r.squared) |>
  kable(digits = 3)
glance(airbnb_fit_interaction) |>
  select(r.squared, adj.r.squared) |>
  kable(digits = 3)

```

The model that includes the interaction effect between bedrooms and room type seems to perform slightly better, with higher $r^2$ and adjusted $r^2$ values of 0.391 and 0.39, respectively. To further validate this, we wanted to conducted a drop in deviance test to see if there was a difference between the two models' performance.

```{r}
#| label: drop-in-deviance

dropdev <- anova(airbnb_fit, airbnb_fit_interaction, test = "Chisq") |>
  kable(digits = 3)

dropdev

```

The results from the drop in deviance test also support this, as the p-value is less than the threshold, indicating that including the interaction effect is able to significantly improve the model's ability to explain variation in log price. As a result, we decided to select the model with the interaction effect as our final model.

```{r}
#| label: check-multicollinearity

vif(airbnb_fit) |>
  as.data.frame() |>
  `colnames<-`("VIF") |>
  tibble::rownames_to_column("Predictor") |>
  kable(digits = 3)

vif(airbnb_fit_interaction) |>
  as.data.frame() |>
  `colnames<-`("VIF") |>
  tibble::rownames_to_column("Predictor") |>
  kable(digits = 3)

```

To assess multicollinearity, we calculated Variance Inflation Factors (VIFs) for both the two models. In the model without interaction terms, all predictors had VIF values below 6. The highest values were observed for the neighborhood dummy variables neighbourhood_group_cleansedBrooklyn (VIF = 5.659) and neighbourhood_group_cleansedManhattan (VIF = 5.573), indicating moderate multicollinearity, but still within acceptable limits. All other predictors had VIFs close to 1, suggesting low collinearity.

In the interaction-effects model, VIF values slightly increased, particularly for `room_typeHotel room` (VIF = 7.202) and its interaction with `bedrooms` (VIF = 7.191). This is expected due to the inclusion of interaction terms, which can introduce redundancy and inflate variance when the interacting variables are correlated or when one category has relatively fewer observations. `room_typePrivate room` and its interaction term also showed moderately elevated VIFs (4.821 and 4.574 respectively). However, **n**one of the predictors exceeded the common VIF threshold of 10, indicating that severe multicollinearity is not present in either model.

## Results

After selecting the interaction effect model to be our final model, we checked model assumptions, diagnostics, and model fit statistics.

### Assumption Check

```{r}
#| label: linearity-and-equal-variance

# model without interaction terms
ggplot(augment(airbnb_fit), aes(.fitted, .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(title = "Residuals vs Fitted Values (without interaction terms)",
       x = "Fitted Values", 
       y = "Residuals")

# model with interaction terms
ggplot(augment(airbnb_fit_interaction), aes(.fitted, .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  labs(title = "Residuals vs Fitted Values (with interaction terms)",
       x = "Fitted Values", 
       y = "Residuals")
```

According to the residual plots, for both models without and with interaction terms, the residuals are centered around 0, which suggests that linearity is satisfied. However, both plots show a mild equal variance because thereâs a slight funnel shape â residuals seem more spread out at lower fitted values and slightly tighter at higher fitted values. There are also few vertical lines of the residuals, indicating discrete fitted values, likely due to categorical variables like room type or neighborhood.

The normality is fine because our dataset has more than 10,000 data points, which is large enough (n \> 30) to satisfy the normality assumption.

The independence is reasonably satisfied because each row in the dataset represents a distinct Airbnb listing, and the data is randomly collected. There is no indication of temporal or spatial autocorrelation, and there are no repeated measurements from the same listing.

### Model Diagnostics

```{r}
#| label: cooks-dist

# check to see if there are any influential points
diagnostics <- augment(airbnb_fit_interaction)

ggplot(diagnostics, aes(x = seq_along(.cooksd), y = .cooksd)) +
  geom_point(alpha = 0.6) +
  geom_hline(yintercept = 0.5, linetype = "dashed", color = "blue") +
  geom_hline(yintercept = 1, linetype = "dashed", color = "green") +
  labs(title = "Cookâs Distance by Observation", x = "Observation Index", y = "Cookâs Distance") +
  theme_minimal()

```

```{r}
#| label: checking-influential-points

# double checking for influential points
diagnostics |>
  filter(.cooksd > 0.5) |>
  kable(digits = 3)
```

There do not seem to be any influential points in our model, where the Cook's Distance exceeds the 1 or 0.5 thresholds.

```{r}
#| label: leverage

# calculate points with high leverage! 

diagnostics <- diagnostics |>
  mutate(
    high_leverage = if_else(
      .hat > (2 * length(coefficients(airbnb_fit_interaction)) / nrow(diagnostics)),
      "High Leverage", 
      "Normal Leverage"
    )
  )

```

```{r}
#| label: plot-leverage
# check for high leverage points
ggplot(diagnostics, aes(x = seq_along(.hat), y = .hat)) +
  geom_point(aes(color = high_leverage), alpha = 0.6) +
  scale_color_manual(values = c("High Leverage" = "red", "Normal Leverage" = "darkblue")) +
  geom_hline(yintercept = diagnostics$h_threshold, linetype = "dashed", color = "black") +
  labs(title = "Leverage of Each Observation in Airbnb Model",
       x = "Observation Index",
       y = "Leverage (Hat Value)") +
  theme_minimal() +
  theme(legend.title = element_blank())
```
